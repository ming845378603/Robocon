#include "switch.h"
#include "delay.h"
#include "led.h"
#include "switch.h"
#include "beep.h"
#include "rmds.h"
#include "can.h"
#include "usart.h"
#include "relay.h"
//////////////////////////////////////////////////////////////////////////////////
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//ALIENTEK STM32F407开发板
//LED驱动代码
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//创建日期:2014/5/2
//版本：V1.0
//版权所有，盗版必究。
//Copyright(C) 广州市星翼电子科技有限公司 2014-2024
//All rights reserved
//////////////////////////////////////////////////////////////////////////////////

//初始化PF9和PF10为输出口.并使能这两个口的时钟
//LED IO初始化
void SWITCH_Init(void)
{
    GPIO_InitTypeDef  GPIO_InitStructure;

    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);//使能GPIOA,GPIOE时钟

    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1|GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6; //KEY0 KEY1 KEY2对应引脚
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;//普通输入模式
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100M
    GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
    GPIO_Init(GPIOE, &GPIO_InitStructure);//初始化GPIOE2,3,4

}

u8 SWITCH_Scan(u8 mode)
{
    static u8 switch_up=1;//按键按松开标志
    if(mode)switch_up=1;  //支持连按
    if(switch_up&&(SW1==0||SW2==0||SW3==0||SW4==0||SW5==0||SW6==0))
    {
        delay_ms(10);//去抖动
        switch_up=0;
        if(SW1==0)return SW1_PRES;
        else if(SW2==0)return SW2_PRES;
        else if(SW3==0)return SW3_PRES;
        else if(SW4==0)return SW4_PRES;
        else if(SW5==0)return SW5_PRES;
        else if(SW6==0)return SW6_PRES;

    } else if(SW1==1&&SW2==1&&SW3==1&&SW4==1&&SW5==1&&SW6==1)switch_up=1;
    return 0;// 无按键按下
}

void SW_MOTOR_ON()
{
    u8 SW;           //保存键值
    SW=SWITCH_Scan(0);		//得到键值
    if(SW)
    {

        if(SW1==0&&stop2==1)
        {
            delay_ms(10);
            LED1_ON;
            CAN_RoboModule_DRV_Velocity_Mode(0,1,5000,0);
        }



        if(SW2==0&&stop1==1)
        {
            delay_ms(10);
            LED1_ON;
            CAN_RoboModule_DRV_Velocity_Mode(0,1,5000,0);
        }



        if(SW3==0&&stopM1==1)
        {
            delay_ms(10);
            LED1_ON;
            MOTOR1=1;
            MOTOR2=1;
        }



        if(SW4==0&&stopM2==1)
        {
            delay_ms(10);
            LED1_ON;
            MOTOR1=1;
            MOTOR2=1;
        }

    }
    else delay_ms(10);
}



void SW_MOTOR_OFF()
{
    if(SW1==1&&stop2==1)
    {
			delay_ms(10);
        LED1_OFF;
        CAN_RoboModule_DRV_Velocity_Mode(0,1,5000,-4000);
    }

    if(SW2==1&&stop1==1)
    {
			delay_ms(10);
        LED1_OFF;
        CAN_RoboModule_DRV_Velocity_Mode(0,1,5000,4000);
    }

    if(SW3==1&&stopM1==1)
    {
			delay_ms(10);
        LED1_OFF;
        MOTOR1=1;
        MOTOR2=0;
    }

    if(SW4==1&&stopM2==1)
    {
delay_ms(10);
        LED1_OFF;
        MOTOR1=0;
        MOTOR2=1;
    }


}

void SW_MOTOR()
{
    SW_MOTOR_ON();
    SW_MOTOR_OFF();
}



